import json
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import sys

def main(arquivoJson):
    print(">>> Reading input...")
    data = []
    with open(arquivoJson, 'r') as arq:
        data = json.load(arq)
    print('>>> Input read...')

    print('>>> Generating output...')
    # NOTE - HEATMAP
    # LINK - https://matplotlib.org/stable/gallery/images_contours_and_fields/image_annotated_heatmap.html#a-simple-categorical-heatmap
    # LINK - https://matplotlib.org/stable/tutorials/colors/colormaps.html
    x, y = data['domain']
    z = data['image']
    xmax = max(x)
    ymax = max(y)
    heatmap =  np.zeros((ymax,xmax),dtype=float)
    for i in range(len(z)):
        heatmap[y[i]-1,x[i]-1] = z[i]
    heatmap = np.flipud(heatmap)  # NOTE - example in documentation doesn't need this

    fig, ax = plt.subplots()
    ax.set_title("Simulation result for thermic conduction.")
    im = ax.imshow(heatmap,cmap='viridis')
    cbar = fig.colorbar(im,ax=ax)
    cbar.ax.set_ylabel('Temperature (Â°C)', rotation=-90, va='bottom')

    # NOTE - ticks and labels
    ax.set_xticks(np.arange(xmax))
    ax.set_xticklabels(np.arange(1,xmax+1))  # NOTE - example in documentation doesn't use this
    ax.set_yticks(np.arange(ymax))
    ax.set_yticklabels(np.arange(ymax,0,-1))  # NOTE - example in documentation doesn't use this

    # # NOTE - cells text
    # for j in range(ymax):
    #     for i in range(xmax):
    #         ax.text(i,j,f'{heatmap[j,i]:.2f}',ha='center', va='center', color='#885525')

    fig.tight_layout()

    print('>>> Output generated...')
    plt.show()

if __name__ == '__main__':
    print(">>> Student: Gabriel da Cunha Borba\n")
    if len(sys.argv) > 1:
        main(sys.argv[1])
    else:
        print('>>> This program takes the path to a .json file and show it.')
        print('>>> Run again passing the path to an archive .json generated by the q1_simulador.jl script:')
    print(">>> Program closed.")

